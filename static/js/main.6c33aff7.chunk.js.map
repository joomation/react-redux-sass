{"version":3,"sources":["store/modules/counter.js","store/modules/index.js","containers/HeaderContainer.js","views/Home/index.js","components/CounterButton.js","containers/CounterContainer.js","lib/hooks/useActions.js","views/Counter/index.js","views/index.js","App.js","serviceWorker.js","index.js"],"names":["increment","type","decrement","initialState","number","counter","state","action","combineReducers","Header","className","exact","activeClassName","to","Component","Home","CounterButton","this","props","text","onClick","CounterContainer","useSelector","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","map","a","bindActionCreators","useActions","Counter","Layout","location","TransitionGroup","CSSTransition","key","pathname","timeout","classNames","path","children","App","basename","render","HeaderContainer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c33aff7.chunk.js","sourcesContent":["// action types\nconst INCREMENT = 'counter/INCREMENT';\nconst DECREMENT = 'counter/DECREMENT';\n\n// action function\nexport const increment = () => ({ type: INCREMENT });\nexport const decrement = () => ({ type: DECREMENT });\n\n// initial state\nconst initialState = {\n  number: 0,\n};\n\n// reducer\nexport default function counter(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        number: state.number + 1,\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport counter from './counter';\n\nexport default combineReducers({\n  counter\n});\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\n\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <div className=\"header\">\n        <ul>\n          <li>\n            <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName=\"active\" to=\"/counter\">Counter</NavLink>\n          </li>\n       \n        </ul>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Header;\n","import React from \"react\";\nfunction Home() {\n  return (\n    <div className=\"wrap\">\n      <div className=\"home\">\n        <h1 className=\"emoji\">😀</h1>\n        <h1>\n          Hello,\n          <br />\n          I'm React + Redux + Sass\n        </h1>\n        <p>\n          This is React + Redux simple starter kit. In addition, added{\" \"}\n          <b>code split</b>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class CounterButton extends Component {\n    static propTypes = {\n        text: PropTypes.string,\n        onClick:PropTypes.func\n    }\n\n    render() {\n        const {text,onClick} = this.props;\n        return (\n            <button onClick={onClick}>{text}</button>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { useActions, useError } from \"../lib/hooks\";\nimport * as actions from \"../store/modules/counter\";\nimport { increment, decrement } from \"../store/modules/counter\";\nimport CounterButton from \"../components/CounterButton\";\n\nfunction CounterContainer() {\n  const { number } = useSelector((state) => ({\n    number: state.counter.number,\n  }));\n  const { increment, decrement } = useActions(actions);\n  const handleIncrement = () => {\n    increment();\n  };\n  const handleDecrement = () => {\n    decrement();\n  };\n  return (\n    <div className=\"counter-wrap\">\n      <div className=\"num\">{number}</div>\n      <CounterButton text=\"increse\" onClick={handleIncrement} />\n      <CounterButton text=\"decrease\" onClick={handleDecrement} />\n    </div>\n  );\n}\n\nexport default CounterContainer;\n","import { bindActionCreators } from 'redux';\nimport { useDispatch } from 'react-redux';\nimport { useMemo } from 'react';\n\nexport function useActions(actions, deps) {\n  const dispatch = useDispatch();\n  return useMemo(\n    () => {\n      if (Array.isArray(actions)) {\n        return actions.map(a => bindActionCreators(a, dispatch));\n      }\n      return bindActionCreators(actions, dispatch);\n    },\n    deps ? [dispatch, ...deps] : [dispatch]\n  );\n}\n","import React, { Component } from \"react\";\nimport CounterContainer from \"../../containers/CounterContainer\";\n\nfunction Counter() {\n  return (\n    <div className=\"wrap\">\n      <h1>Redux Counter</h1>\n      <CounterContainer />\n    </div>\n  );\n}\nexport default Counter;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Home from \"./Home\";\nimport Counter from \"./Counter\";\n\nfunction Layout({ location }) {\n  return (\n    <TransitionGroup>\n      <CSSTransition key={location.pathname} timeout={500} classNames=\"frame\">\n        <Switch location={location}>\n          <Route exact path=\"/\" children={Home} />\n          <Route path=\"/counter\" children={Counter} />\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n}\n\nexport default Layout;\n","import React, { Suspense, lazy } from \"react\";\nimport \"./styles/layout.scss\";\nimport HeaderContainer from \"./containers/HeaderContainer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Layout from \"./views\";\nfunction App() {\n  return (\n    <Router basename=\"/react-redux-sass\">\n      <Route\n        render={({ location }) =>\n          (\n            <div>\n              <HeaderContainer />\n              <Layout location={location} />\n            </div>\n          ).props.children\n        }\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './store/modules';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// 리덕스 개발자도구 적용\nconst devTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst store = createStore(rootReducer, devTools);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}